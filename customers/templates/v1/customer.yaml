{{- if eq .Values.version "v1" }}

apiVersion: v1
kind: Namespace
metadata:
  name: ns-{{ .Values.vmid }}
  labels:
    managed-by: helm
    customer: {{ .Values.vmid }}

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-{{ .Values.vmid }}
spec:
  capacity:
    storage: {{ .Values.volumes.storage }}Gi
  volumeMode: Filesystem
  persistentVolumeReclaimPolicy: Retain
  storageClassName: {{ .Values.storageClassName }}
  accessModes:
    - ReadWriteOnce
  csi:
    driver: blockvolume.csi.oraclecloud.com
    volumeHandle: {{ .Values.volumes.volume_ocid }}
    {{- if .Values.volumes.fsType }}
    {{- if ne .Values.volumes.fsType "ext4" }}
    fsType: {{ .Values.volumes.fsType }}
    {{- end }}
    {{- end }}

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vol-pvc-{{ .Values.vmid }}
  namespace: ns-{{ .Values.vmid }}
spec:
  accessModes:
    - ReadWriteOnce 
  resources:
    requests:
      storage: {{ .Values.volumes.storage }}Gi
  storageClassName: {{ .Values.storageClassName }}
  volumeName: pv-{{ .Values.vmid }}

---

apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: {{ $.Values.tls.basename }}-es-{{ .Values.vmid }}
  namespace: ns-{{ .Values.vmid }}
spec:
  refreshInterval: "1h"
  secretStoreRef:
    name: {{ $.Values.sharedSecretStore.name }}
    kind: ClusterSecretStore
  target:
    name: {{ $.Values.tls.basename }}-{{ .Values.vmid }}
    template:
      type: kubernetes.io/tls
  data:
  - secretKey: tls.crt
    remoteRef:
      key: {{ $.Values.tls.basename }}-secret
      property: tls.crt
  - secretKey: tls.key
    remoteRef:
      key: {{ $.Values.tls.basename }}-secret
      property: tls.key

---

apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: image-es-{{ .Values.vmid }}
  namespace: ns-{{ .Values.vmid }}
spec:
  refreshInterval: "1h"
  secretStoreRef:
    name: {{ $.Values.sharedSecretStore.name }}
    kind: ClusterSecretStore
  target:
    name: ocirsecret-{{ .Values.vmid }}
    template:
      type: kubernetes.io/dockerconfigjson
  data:
    - remoteRef:
        key: "{{ $.Values.sharedSecretStore.sharedNamespace }}-ocir-secret"
        property: .dockerconfigjson
      secretKey: .dockerconfigjson

---

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  namespace: ns-{{ .Values.vmid }}
  name: np-{{ .Values.vmid }}
spec:
  podSelector:
    matchLabels: {}
  ingress:
    - from:
        - podSelector: {}
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: traefik

{{- end }}