apiVersion: v1
kind: ConfigMap
metadata:
  {{- if eq .Values.environment "" }}
  name: "{{ .Values.appName }}-cm"
  {{- else }}
  name: "{{ .Values.environment }}-{{ .Values.appName }}-cm"
  {{- end }}
  namespace: "{{ .Values.namespace }}-ns"
data:
  # Logging configuration
  LOG_LEVEL: INFO

  # Application configuration
  TOKEN_EXPIRY_SECONDS: "600"
  KEY_PAIR_TTL_SECONDS: "600"

  # OCI configuration
  OCI_NOSQL_COMPARTMENT_OCID: {{ .Values.compartments.parent.state }}
  OCI_REGION: {{ .Values.region }}
  OCI_TENANCY_OCID: {{ .Values.compartments.parent.root }}

  # LOKI configuration
  LOKI_ENDPOINT: {{ .Values.observability.lokiEndpoint }}
  LOKI_CLUSTER: {{ .Values.stage }}

---

apiVersion: v1
kind: ServiceAccount
metadata:
  {{- if eq .Values.environment "" }}
  name: "{{ .Values.appName }}-sa"
  {{- else }}
  name: "{{ .Values.environment }}-{{ .Values.appName }}-sa"
  {{- end }}
  namespace: "{{ .Values.namespace }}-ns"

---

apiVersion: apps/v1
kind: Deployment
metadata:
  {{- if eq .Values.environment "" }}
  name: "{{ .Values.appName }}-dpy"
  {{- else }}
  name: "{{ .Values.environment }}-{{ .Values.appName }}-dpy"
  {{- end }}
  namespace: "{{ .Values.namespace }}-ns"
spec:
  replicas: 5
  selector:
    matchLabels:
      {{- if eq .Values.environment "" }}
      app: "{{ .Values.appName }}-pod"
      {{- else }}
      app: "{{ .Values.environment }}-{{ .Values.appName }}-pod"
      {{- end }}
  template:
    metadata:
      labels:
        {{- if eq .Values.environment "" }}
        app: "{{ .Values.appName }}-pod"
        {{- else }}
        app: "{{ .Values.environment }}-{{ .Values.appName }}-pod"
        {{- end }}
    spec:
      containers:
      - name: {{ .Values.appName }}
        image: "{{ $.Values.containerRegistry }}/{{ $.Values.ociNamespaces.parent }}/{{ .Values.images.vdiAuth }}"
        ports:
          {{- .Values.appPorts | toYaml | nindent 10 }}
        envFrom:
        {{- if eq .Values.environment "" }}
        - configMapRef:
            name: "{{ .Values.appName }}-cm"
        {{- else }}
        - configMapRef:
            name: "{{ .Values.environment }}-{{ .Values.appName }}-cm"
        {{- end }}
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
        resources:
          {{ .Values.resources | toYaml | nindent 10 }}
      imagePullSecrets:
      - name: "{{ .Values.namespace }}-ocir-secret"
      nodeSelector:
        {{- .Values.nodeSelector | toYaml | nindent 8 }}
      securityContext:
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
      {{- if eq .Values.environment "" }}
      serviceAccountName: "{{ .Values.appName }}-sa"
      {{- else }}
      serviceAccountName: "{{ .Values.environment }}-{{ .Values.appName }}-sa"
      {{- end }}
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            {{- if eq .Values.environment "" }}
            app: "{{ .Values.appName }}-pod"
            {{- else }}
            app: "{{ .Values.environment }}-{{ .Values.appName }}-pod"
            {{- end }}

---

apiVersion: v1
kind: Service
metadata:
  {{- if eq .Values.environment "" }}
  name: "{{ .Values.appName }}-svc"
  {{- else }}
  name: "{{ .Values.environment }}-{{ .Values.appName }}-svc"
  {{- end }}
  namespace: "{{ .Values.namespace }}-ns"
spec:
  ports:
    - name: http
      port: {{ .Values.svcPort }}
      targetPort: {{ index (.Values.appPorts | first) "containerPort" }}
  selector:
    {{- if eq .Values.environment "" }}
    app: "{{ .Values.appName }}-pod"
    {{- else }}
    app: "{{ .Values.environment }}-{{ .Values.appName }}-pod"
    {{- end }}

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  {{- if eq .Values.environment "" }}
  name: "{{ .Values.appName }}-hpa"
  {{- else }}
  name: "{{ .Values.environment }}-{{ .Values.appName }}-hpa"
  {{- end }}
  namespace: "{{ .Values.namespace }}-ns"
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    {{- if eq .Values.environment "" }}
    name: "{{ .Values.appName }}-dpy"
    {{- else }}
    name: "{{ .Values.environment }}-{{ .Values.appName }}-dpy"
    {{- end }}
  minReplicas: {{ .Values.hpaConfig.minReplicas }}
  maxReplicas: {{ .Values.hpaConfig.maxReplicas }}
  behavior:
    {{ .Values.hpaConfig.behavior | toYaml | nindent 4 }}
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: {{ .Values.hpaConfig.cpuUtilization }}
        type: Utilization
    type: Resource
  - resource:
      name: memory
      target:
        averageUtilization: {{ .Values.hpaConfig.memoryUtilization }}
        type: Utilization
    type: Resource
