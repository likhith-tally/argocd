# {{- if eq .Values.environment "" }}
# kind: GatewayClass
# apiVersion: gateway.networking.k8s.io/v1
# metadata:
#   name: {{ .Values.envoy.basename }}-gateway-class
# spec:
#   controllerName: gateway.envoyproxy.io/gatewayclass-controller
# {{- end }}

# ---

# apiVersion: gateway.envoyproxy.io/v1alpha1
# kind: EnvoyProxy
# metadata:
#   {{- if eq .Values.environment "" }}
#   name: {{ .Values.envoy.basename }}-proxy
#   {{- else }}
#   name: {{ .Values.environment }}-{{ .Values.envoy.basename }}-proxy
#   {{- end }}
#   namespace: {{ .Values.envoy.basename }}-ns
# spec:
#   provider:
#     type: Kubernetes
#     kubernetes:
#       envoyService:
#         annotations:
#           oci.oraclecloud.com/load-balancer-type: {{ .Values.envoy.publicLoadBalancer.type }}
#           oci-network-load-balancer.oraclecloud.com/oci-network-security-groups: {{ .Values.envoy.publicLoadBalancer.securityGroup }}
#           oci-network-load-balancer.oraclecloud.com/node-label-selector: {{ .Values.envoy.nodeSelector }}

#       envoyDeployment:
#         {{- if eq .Values.environment "" }}
#         name: {{ .Values.envoy.basename }}-deployment
#         {{- else }}
#         name: {{ .Values.environment }}-{{ .Values.envoy.basename }}-deployment
#         {{- end }}
#         replicas: {{ .Values.envoy.replicas }}
#         pod:
#           labels:
#             {{- toYaml .Values.envoy.podLabels | nindent 12 }}
#             {{- if eq .Values.environment "" }}
#             environment: default
#             {{- else }}
#             environment: {{ .Values.environment }}
#             {{- end }}
#           {{- $nodeSelector := dict }}
#           {{- $kv := split "=" .Values.envoy.nodeSelector }}
#           {{- $_ := set $nodeSelector (index $kv "_0") (index $kv "_1") }}
#           nodeSelector:
#             {{- toYaml $nodeSelector | nindent 12 }}
#           topologySpreadConstraints:
#           - labelSelector:
#               matchLabels:
#                 {{- toYaml .Values.envoy.podLabels | nindent 16 }}
#             maxSkew: 1
#             topologyKey: kubernetes.io/hostname
#             whenUnsatisfiable: DoNotSchedule
#         # container:
#         #   image: "ocir.ap-mumbai-1.oci.oraclecloud.com/bmwva1xqkb3s/oss-images:envoy-distroless-dev"
#         # [TODO] Uncomment and set proper values. Doing via patch seems more safe.
#         #   resources: 
      
#       # shutdownManager:
#       #   image: "ocir.ap-mumbai-1.oci.oraclecloud.com/bmwva1xqkb3s/oss-images:gateway-dev-latest"
      
#       {{- if .Values.envoy.hpa.enabled }}
#       envoyHpa:
#         {{- if eq .Values.environment "" }}
#         name: {{ .Values.envoy.basename }}-hpa
#         {{- else }}
#         name: {{ .Values.environment }}-{{ .Values.envoy.basename }}-hpa
#         {{- end }}
#         minReplicas: {{ .Values.envoy.hpa.minReplicas }}
#         maxReplicas: {{ .Values.envoy.hpa.maxReplicas }}
#         metrics:
#         - resource:
#             name: cpu
#             target:
#               averageUtilization: {{ .Values.envoy.hpa.cpuUtilization }}
#               type: Utilization
#           type: Resource
#         - resource:
#             name: memory
#             target:
#               averageUtilization: {{ .Values.envoy.hpa.memoryUtilization }}
#               type: Utilization
#           type: Resource
#       {{- end }}

# ---

# apiVersion: gateway.networking.k8s.io/v1
# kind: Gateway
# metadata:
#   {{- if eq .Values.environment "" }}
#   name: {{ .Values.envoy.basename }}-gateway
#   {{- else }}
#   name: {{ .Values.environment }}-{{ .Values.envoy.basename }}-gateway
#   {{- end }}
#   namespace: {{ .Values.envoy.basename }}-ns
# spec:
#   gatewayClassName: {{ .Values.envoy.basename }}-gateway-class
#   infrastructure:
#     parametersRef:
#       group: gateway.envoyproxy.io
#       kind: EnvoyProxy
#       {{- if eq .Values.environment "" }}
#       name: {{ .Values.envoy.basename }}-proxy
#       {{- else }}
#       name: {{ .Values.environment }}-{{ .Values.envoy.basename }}-proxy
#       {{- end }}
#   listeners:
#   {{- if .Values.bizAppListeners.enablePort80 }}
#   - name: listener-port80
#     protocol: HTTP
#     port: 80
#     allowedRoutes:
#       namespaces:
#         from: Selector
#         selector:
#           matchLabels:
#             {{- toYaml .Values.bizAppListeners.namespaceSelector | nindent 12 }}
#   {{- end }}
#   - name: auth-listener-port443
#     protocol: HTTPS
#     port: 443
#     hostname: "*.{{ .Values.accountIdentity }}.{{ .Values.baseDomain }}"
#     allowedRoutes:
#       namespaces:
#         from: Selector
#         selector:
#           matchLabels:
#             {{- toYaml .Values.bizAppListeners.namespaceSelector | nindent 12 }}
#       kinds:
#       - group: gateway.networking.k8s.io
#         kind: HTTPRoute
#     tls:
#       mode: Terminate
#       certificateRefs:
#       - group: ''
#         kind: Secret
#         name: {{ .Values.tls.basename }}-{{ .Values.envoy.basename }}-secret
#   {{- if .Values.bizAppListeners.enableUnauthPort443 }}
#   - name: unauth-listener-port443
#     protocol: HTTPS
#     port: 443
#     {{- if eq .Values.environment "" }}
#     hostname: "biz.{{ .Values.baseDomain}}"
#     {{- else }}
#     hostname: "{{ .Values.environment }}-biz.{{ .Values.baseDomain}}"
#     {{- end }}
#     allowedRoutes:
#       namespaces:
#         from: Selector
#         selector:
#           matchLabels:
#             {{- toYaml .Values.bizAppListeners.namespaceSelector | nindent 12 }}
#       kinds:
#       - group: gateway.networking.k8s.io
#         kind: HTTPRoute
#     tls:
#       mode: Terminate
#       certificateRefs:
#       - group: ''
#         kind: Secret
#         {{- if eq .Values.environment "" }}
#         name: unauth-{{ .Values.tls.basename }}-{{ .Values.envoy.basename }}-secret
#         {{- else }}
#         name: {{ .Values.environment }}-unauth-{{ .Values.tls.basename }}-{{ .Values.envoy.basename }}-secret
#         {{- end }}
#   {{- end }}

# {{- if eq .Values.environment "" }}
# ---

# apiVersion: external-secrets.io/v1
# kind: ExternalSecret
# metadata:
#   name: {{ .Values.tls.basename }}-{{ .Values.envoy.basename }}-es
#   namespace: {{ .Values.envoy.basename }}-ns
# spec:
#   refreshInterval: "1h"
#   secretStoreRef:
#     name: {{ .Values.sharedSecretStore.name }}
#     kind: ClusterSecretStore
#   target:
#     name: {{ .Values.tls.basename }}-{{ .Values.envoy.basename }}-secret
#     template:
#       type: kubernetes.io/tls
#   data:
#   - secretKey: tls.crt
#     remoteRef:
#       key: {{ .Values.tls.basename }}-secret
#       property: tls.crt
#   - secretKey: tls.key
#     remoteRef:
#       key: {{ .Values.tls.basename }}-secret
#       property: tls.key
# {{- end }}

# ---

# apiVersion: external-secrets.io/v1
# kind: ExternalSecret
# metadata:
#   {{- if eq .Values.environment "" }}
#   name: unauth-{{ .Values.tls.basename }}-{{ .Values.envoy.basename }}-es
#   {{- else }}
#   name: {{ .Values.environment }}-unauth-{{ .Values.tls.basename }}-{{ .Values.envoy.basename }}-es
#   {{- end }}
#   namespace: {{ .Values.envoy.basename }}-ns
# spec:
#   refreshInterval: "1h"
#   secretStoreRef:
#     name: {{ .Values.sharedSecretStore.name }}
#     kind: ClusterSecretStore
#   target:
#     {{- if eq .Values.environment "" }}
#     name: unauth-{{ .Values.tls.basename }}-{{ .Values.envoy.basename }}-secret
#     {{- else }}
#     name: {{ .Values.environment }}-unauth-{{ .Values.tls.basename }}-{{ .Values.envoy.basename }}-secret
#     {{- end }}
#     template:
#       type: kubernetes.io/tls
#   data:
#   - secretKey: tls.crt
#     remoteRef:
#       {{- if eq .Values.environment "" }}
#       key: unauth-{{ .Values.tls.basename }}-secret
#       {{- else }}
#       key: {{ .Values.environment }}-unauth-{{ .Values.tls.basename }}-secret
#       {{- end }}
#       property: tls.crt
#   - secretKey: tls.key
#     remoteRef:
#       {{- if eq .Values.environment "" }}
#       key: unauth-{{ .Values.tls.basename }}-secret
#       {{- else }}
#       key: {{ .Values.environment }}-unauth-{{ .Values.tls.basename }}-secret
#       {{- end }}
#       property: tls.key

# ---

# apiVersion: gateway.envoyproxy.io/v1alpha1
# kind: ClientTrafficPolicy
# metadata:
#   {{- if eq .Values.environment "" }}
#   name: {{ .Values.envoy.basename }}-ctp
#   {{- else }}
#   name: {{ .Values.environment }}-{{ .Values.envoy.basename }}-ctp
#   {{- end }}
#   namespace: {{ .Values.envoy.basename }}-ns
# spec:
#   clientIPDetection:
#     xForwardedFor:
#       numTrustedHops: 1
#   targetRefs:
#     - group: gateway.networking.k8s.io
#       kind: Gateway
#       {{- if eq .Values.environment "" }}
#       name: {{ .Values.envoy.basename }}-gateway
#       {{- else }}
#       name: {{ .Values.environment }}-{{ .Values.envoy.basename }}-gateway
#       {{- end }}
